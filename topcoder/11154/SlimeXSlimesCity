
// {{{ Boilerplate Code <--------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()

using namespace std;

// }}}

class SlimeXSlimesCity
{
public:
	int merge(vector <int> P)
	{
        sort(P.begin(), P.end());
        int num = (P[0] != P[1]) ? 1: 2;
        long long sum = P[0] + P[1];
        for (int  i = 2; i < P.size(); i++) {
            if (sum < (long long) P[i] ) {
                num = 0;
            }
             
            sum += P[i];
            num++;
            cout << "Iter = " << i << " sum = " << sum << " num = " << num << "\n";
        }
        
        return num;
	}
};


// Edited by VimCoder 0.3.5
// http://github.com/chazmcgarvey/vimcoder

