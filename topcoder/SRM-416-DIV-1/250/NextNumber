// {{{ Boilerplate Code <--------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()

using namespace std;

// }}}

class NextNumber
{
public:


	int getNextNumber(int N)
	{
        bitset<32> b(N);
        int pos = 0;
        int count = 0;
        while (pos < b.size()) {
            if (!b.test(pos)) {
                pos++;
            } else {
                break;
            }
        }

        while (pos < b.size()) {
            if (b.test(pos)) {
                pos++;
                count++;
            } else {
                break;
            }
        }

        count--;
        b.set(pos);
        pos--;

        while(pos >= 0) {
            if (pos > count - 1) {
                b.reset(pos);
            } else {
                b.set(pos);
            }
            pos--;
        }
		return (int) b.to_ulong();
	}
};


// Edited by VimCoder 0.3.5
// http://github.com/chazmcgarvey/vimcoder