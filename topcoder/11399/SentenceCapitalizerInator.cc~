
// {{{ Boilerplate Code <--------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()

using namespace std;

// }}}

class SentenceCapitalizerInator
{
public:
	string fixCaps(string paragraph)
	{
        stringstream ss;
        bool cap = true;
        char ins;
        for (int i = 0; i < paragraph.size(); i++) {
            ins = paragraph[i];
            if (cap && ins != ' ') {
                ins = 'A' + paragraph[i] -'a';
                cap = false;
            }
            if (paragraph[i] = '.') {
                cap = true;
            }
            ss << ins;
        }
		return ss.str();
	}
};

